<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>AssigmentNotResolvedValue</name>
        <label>AssigmentNotResolvedValue</label>
        <locationX>1064</locationX>
        <locationY>650</locationY>
        <assignmentItems>
            <assignToReference>NotResolved</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loopCases</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>resolvido</name>
        <label>resolvido?</label>
        <locationX>1065</locationX>
        <locationY>366</locationY>
        <defaultConnector>
            <targetReference>loopCases</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>statusResolvido</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>loopCases.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Resolvido</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssigmentNotResolvedValue</targetReference>
            </connector>
            <label>statusNaoResolvido</label>
        </rules>
    </decisions>
    <decisions>
        <name>ValueCheck</name>
        <label>ValueCheck</label>
        <locationX>764</locationX>
        <locationY>719</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>PossuiValorNaVariavel</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>NotResolved</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case</targetReference>
            </connector>
            <label>PossuiValorNaVariavel?</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>SubCase Automações resolvido {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SubCase Automações resolvido</label>
    <loops>
        <name>loopCases</name>
        <label>loopCases</label>
        <locationX>799</locationX>
        <locationY>364</locationY>
        <collectionReference>getListParentCase</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>resolvido</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>ValueCheck</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>getListParentCase</name>
        <label>getListParentCase</label>
        <locationX>644</locationX>
        <locationY>369</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>loopCases</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getRecordType.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getRecordType</name>
        <label>getRecordType</label>
        <locationX>463</locationX>
        <locationY>395</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getListParentCase</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SubCaso</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case</name>
        <label>Update Case</label>
        <locationX>779</locationX>
        <locationY>886</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Em Andamento</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>362</locationX>
        <locationY>36</locationY>
        <connector>
            <targetReference>getRecordType</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Resolvido</stringValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>currentItem_FiltroGetSubCases</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>NotResolved</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
</Flow>
